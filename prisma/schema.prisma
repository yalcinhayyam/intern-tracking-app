
generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

// Veritabanı bağlantı ayarları
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Category {
    id        String    @id @default(uuid()) @db.Uuid
    name      String
    // Diğer kategori özellikleri eklenebilir
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    products   Product[]
}

model Tag {
    id        String    @id @default(uuid()) @db.Uuid
    name      String
    // Diğer kategori özellikleri eklenebilir
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    Product   Product[]
}

// User modeli (önceki)
model User {
    id        String   @id @default(uuid()) @db.Uuid
    username  String
    email     String   @unique
    password  String
    // Diğer kullanıcı özellikleri eklenebilir
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    orders     Order[]
}

// Product modeli (önceki)
model Product {
    id          String   @id @default(uuid()) @db.Uuid
    name        String
    description String?
    price       Float
    stock       Int
    // Diğer ürün özellikleri eklenebilir
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    // Foreign key ilişkileri
    categoryId String   @db.Uuid
    category   Category @relation(fields: [categoryId], references: [id])
    orders      Order[]
}

// Order modeli (önceki)
model Order {
    id        String   @id @default(uuid()) @db.Uuid
    userId    String   @db.Uuid
    productId String   @db.Uuid
    quantity  Int
    total     Float
    // Diğer sipariş özellikleri eklenebilir
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Foreign key ilişkileri
    user    User    @relation(fields: [userId], references: [id])
    product Product @relation(fields: [productId], references: [id])
}

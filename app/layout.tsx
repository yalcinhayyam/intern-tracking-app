// import "reflect-metadata";

import type { Metadata } from "next";
import ReduxProvider from "@/lib/components/ReduxProvider";
import "./globals.scss";
import { CounterContextProvider } from "@/lib/context-api/counter";
import { SessionProvider } from "@/lib/components/SessionProvider";
import { getServerSession } from "next-auth";
import { authOptions } from "@/lib/utilities";
import { loadErrorMessages, loadDevMessages } from "@apollo/client/dev";
import { ApolloProvider } from "@/lib/utilities/client";
import { ProviderComposer } from "@/lib/context-api";
import { Inter } from "next/font/google";
import { NavBar } from "@/lib/components/NavBar";
import { Footer } from "@/lib/components/Footer";
import NextUIProvider from "@/lib/components/NextUIProvider";

const inter = Inter({ subsets: ["latin"] });

function isDevelopment(): boolean {
  return process.env.NODE_ENV !== "production";
}
const __DEV__ = isDevelopment();
if (__DEV__) {
  loadDevMessages();
  loadErrorMessages();
}

export const metadata: Metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  return (
    <SessionProvider session={session}>
      <ApolloProvider>
        <ProviderComposer components={[CounterContextProvider]}>
          <ReduxProvider>
            <html lang="en">
              <body className={inter.className}>
                <NextUIProvider>
                  <NavBar />
                    {children}
                       <Footer />
                </NextUIProvider>
              </body>
            </html>
          </ReduxProvider>
        </ProviderComposer>
      </ApolloProvider>
    </SessionProvider>
  );
}

import "reflect-metadata";
import Nav from "@/lib/components/Nav";
import ReduxProvider from "@/lib/components/ReduxProvider";
import "./globals.scss";
import { CounterContextProvider } from "@/lib/context-api/counter";
import { SessionProvider } from "@/lib/components/SessionProvider";
import { getServerSession } from "next-auth";
import { authOptions } from "@/lib/utilities";
import { loadErrorMessages, loadDevMessages } from "@apollo/client/dev";
import { ApolloProvider } from "@/lib/utilities/client";
import { appWithTranslation } from "next-i18next";


const __DEV__ = process.env.NODE_ENV !== "production"
if (__DEV__) {  // Adds messages only in a dev environment
  loadDevMessages();
  loadErrorMessages();
}


export const metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  return (
    <SessionProvider session={session}>
      <ApolloProvider>
        <CounterContextProvider>
          <ReduxProvider>
            <html lang="en">
              {/* <html lang="en" className={"dark"}> */}
              <body>
                {/* {children} */}
                {children}
              </body>
            </html>
          </ReduxProvider>
        </CounterContextProvider>
      </ApolloProvider>
    </SessionProvider>
  );
}


// import dynamic from "next/dynamic";

// const DynamicUserComponent = dynamic(
//   () => import("../../components/User").then((file) => file),
//   {
//     loading: () => <p>Loading...</p>,
//   }
// );

// export default function About() {
//   return <DynamicUserComponent />;
// }
